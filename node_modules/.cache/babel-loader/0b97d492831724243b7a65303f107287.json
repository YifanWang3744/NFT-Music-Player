{"ast":null,"code":"var _jsxFileName = \"/Users/cengwenxin/Desktop/6883project/src/frontend/components/MyResales.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport { ethers } from \"ethers\";\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport Identicon from 'identicon.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MyResales(_ref) {\n  _s();\n\n  let {\n    contract,\n    account\n  } = _ref;\n  const audioRefs = useRef([]);\n  const [loading, setLoading] = useState(true);\n  const [listedItems, setListedItems] = useState(null);\n  const [soldItems, setSoldItems] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(null);\n  const [selected, setSelected] = useState(0);\n  const [previous, setPrevious] = useState(null);\n\n  const loadMyResales = async () => {\n    // Fetch resale items from marketplace by quering MarketItemRelisted events with the seller set as the user\n    let filter = contract.filters.MarketItemRelisted(null, account, null);\n    let results = await contract.queryFilter(filter); // Fetch metadata of each nft and add that to item object.\n\n    const listedItems = await Promise.all(results.map(async i => {\n      // fetch arguments from each result\n      i = i.args; // get uri url from nft contract\n\n      const uri = await contract.tokenURI(i.tokenId); // use uri to fetch the nft metadata stored on ipfs \n\n      const response = await fetch(uri + \".json\");\n      const metadata = await response.json();\n      const identicon = `data:image/png;base64,${new Identicon(metadata.name + metadata.price, 330).toString()}`; // define listed item object\n\n      let purchasedItem = {\n        price: i.price,\n        itemId: i.tokenId,\n        name: metadata.name,\n        audio: metadata.audio,\n        identicon\n      };\n      return purchasedItem;\n    }));\n    setListedItems(listedItems); // Fetch sold resale items by quering MarketItemBought events with the seller set as the user.\n\n    filter = contract.filters.MarketItemBought(null, account, null, null);\n    results = await contract.queryFilter(filter); // Filter out the sold items from the listedItems\n\n    const soldItems = listedItems.filter(i => results.some(j => i.itemId.toString() === j.args.tokenId.toString()));\n    setSoldItems(soldItems);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (isPlaying) {\n      audioRefs.current[selected].play();\n      if (selected !== previous) audioRefs.current[previous].pause();\n    } else if (isPlaying !== null) {\n      audioRefs.current[selected].pause();\n    }\n  });\n  useEffect(() => {\n    !listedItems && loadMyResales();\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      padding: \"1rem 0\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: listedItems.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-5 py-3 container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Listed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          xs: 1,\n          md: 2,\n          lg: 4,\n          className: \"g-4 py-3\",\n          children: listedItems.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n            className: \"overflow-hidden\",\n            children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n              src: item.audio,\n              ref: el => audioRefs.current[idx] = el\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: item.identicon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                color: \"secondary\",\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-grid px-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"secondary\",\n                    onClick: () => {\n                      setPrevious(selected);\n                      setSelected(idx);\n                      if (!isPlaying || idx === selected) setIsPlaying(!isPlaying);\n                    },\n                    children: isPlaying && selected === idx ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      width: \"23\",\n                      height: \"23\",\n                      fill: \"currentColor\",\n                      className: \"bi bi-pause\",\n                      viewBox: \"0 0 16 16\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M6 3.5a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5zm4 0a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 87,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                      xmlns: \"http://www.w3.org/2000/svg\",\n                      width: \"23\",\n                      height: \"23\",\n                      fill: \"currentColor\",\n                      className: \"bi bi-play\",\n                      viewBox: \"0 0 16 16\",\n                      children: /*#__PURE__*/_jsxDEV(\"path\", {\n                        d: \"M10.804 8 5 4.633v6.734L10.804 8zm.792-.696a.802.802 0 0 1 0 1.392l-6.363 3.692C4.713 12.69 4 12.345 4 11.692V4.308c0-.653.713-.998 1.233-.696l6.363 3.692z\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: \"mt-1\",\n                  children: [ethers.utils.formatEther(item.price), \" ETH\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), soldItems.length > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n            xs: 1,\n            md: 2,\n            lg: 4,\n            className: \"g-4 py-3\",\n            children: soldItems.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n              className: \"overflow-hidden\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  variant: \"top\",\n                  src: item.identicon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  color: \"secondary\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"mt-1\",\n                    children: [ethers.utils.formatEther(item.price), \" ETH\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n            style: {\n              padding: \"1rem 0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"No sold assets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n        style: {\n          padding: \"1rem 0\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No listed assets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyResales, \"eLiiTCzBDqpzUs90lRpM4gN3J08=\");\n\n_c = MyResales;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyResales\");","map":{"version":3,"sources":["/Users/cengwenxin/Desktop/6883project/src/frontend/components/MyResales.js"],"names":["useState","useEffect","useRef","ethers","Row","Col","Card","Button","Identicon","MyResales","contract","account","audioRefs","loading","setLoading","listedItems","setListedItems","soldItems","setSoldItems","isPlaying","setIsPlaying","selected","setSelected","previous","setPrevious","loadMyResales","filter","filters","MarketItemRelisted","results","queryFilter","Promise","all","map","i","args","uri","tokenURI","tokenId","response","fetch","metadata","json","identicon","name","price","toString","purchasedItem","itemId","audio","MarketItemBought","some","j","current","play","pause","padding","length","item","idx","el","utils","formatEther"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Col, Card, Button } from 'react-bootstrap'\nimport Identicon from 'identicon.js';\n\nexport default function MyResales({ contract, account }) {\n  const audioRefs = useRef([]);\n  const [loading, setLoading] = useState(true)\n  const [listedItems, setListedItems] = useState(null)\n  const [soldItems, setSoldItems] = useState([])\n  const [isPlaying, setIsPlaying] = useState(null)\n  const [selected, setSelected] = useState(0)\n  const [previous, setPrevious] = useState(null)\n  const loadMyResales = async () => {\n    // Fetch resale items from marketplace by quering MarketItemRelisted events with the seller set as the user\n    let filter = contract.filters.MarketItemRelisted(null, account, null)\n    let results = await contract.queryFilter(filter)\n    // Fetch metadata of each nft and add that to item object.\n    const listedItems = await Promise.all(results.map(async i => {\n      // fetch arguments from each result\n      i = i.args\n      // get uri url from nft contract\n      const uri = await contract.tokenURI(i.tokenId)\n      // use uri to fetch the nft metadata stored on ipfs \n      const response = await fetch(uri + \".json\")\n      const metadata = await response.json()\n      const identicon = `data:image/png;base64,${new Identicon(metadata.name + metadata.price, 330).toString()}`\n      // define listed item object\n      let purchasedItem = {\n        price: i.price,\n        itemId: i.tokenId,\n        name: metadata.name,\n        audio: metadata.audio,\n        identicon\n      }\n      return purchasedItem\n    }))\n    setListedItems(listedItems)\n    // Fetch sold resale items by quering MarketItemBought events with the seller set as the user.\n    filter = contract.filters.MarketItemBought(null, account, null, null)\n    results = await contract.queryFilter(filter)\n    // Filter out the sold items from the listedItems\n    const soldItems = listedItems.filter(i => results.some(j => i.itemId.toString() === j.args.tokenId.toString()))\n    setSoldItems(soldItems)\n    setLoading(false)\n  }\n  useEffect(() => {\n    if (isPlaying) {\n      audioRefs.current[selected].play()\n      if (selected !== previous) audioRefs.current[previous].pause()\n    } else if (isPlaying !== null) {\n      audioRefs.current[selected].pause()\n    }\n\n  })\n  useEffect(() => {\n    !listedItems && loadMyResales()\n  })\n\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\" }}>\n      <h2>Loading...</h2>\n    </main>\n  )\n  return (\n    <div className=\"flex justify-center\">\n      <div className=\"flex justify-center\">\n        {listedItems.length > 0 ?\n          <div className=\"px-5 py-3 container\">\n            <h2>Listed</h2>\n            <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\n              {listedItems.map((item, idx) => (\n                <Col key={idx} className=\"overflow-hidden\">\n                  <audio src={item.audio} ref={el => audioRefs.current[idx] = el}></audio>\n                  <Card>\n                    <Card.Img variant=\"top\" src={item.identicon} />\n                    <Card.Body color=\"secondary\">\n                      <Card.Title>{item.name}</Card.Title>\n                      <div className=\"d-grid px-4\">\n                        <Button variant=\"secondary\" onClick={() => {\n                          setPrevious(selected)\n                          setSelected(idx)\n                          if (!isPlaying || idx === selected) setIsPlaying(!isPlaying)\n                        }}>\n                          {isPlaying && selected === idx ? (\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"23\" height=\"23\" fill=\"currentColor\" className=\"bi bi-pause\" viewBox=\"0 0 16 16\">\n                              <path d=\"M6 3.5a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5zm4 0a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5z\" />\n                            </svg>\n                          ) : (\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"23\" height=\"23\" fill=\"currentColor\" className=\"bi bi-play\" viewBox=\"0 0 16 16\">\n                              <path d=\"M10.804 8 5 4.633v6.734L10.804 8zm.792-.696a.802.802 0 0 1 0 1.392l-6.363 3.692C4.713 12.69 4 12.345 4 11.692V4.308c0-.653.713-.998 1.233-.696l6.363 3.692z\" />\n                            </svg>\n                          )}\n                        </Button>\n                      </div>\n                      <Card.Text className=\"mt-1\">\n                        {ethers.utils.formatEther(item.price)} ETH\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              ))}\n            </Row>\n            <>\n              <h2>Sold</h2>\n              {soldItems.length > 0 ?\n                <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\n                  {soldItems.map((item, idx) => (\n                    <Col key={idx} className=\"overflow-hidden\">\n                      <Card>\n                        <Card.Img variant=\"top\" src={item.identicon} />\n                        <Card.Body color=\"secondary\">\n                          <Card.Title>{item.name}</Card.Title>\n                          <Card.Text className=\"mt-1\">\n                            {ethers.utils.formatEther(item.price)} ETH\n                          </Card.Text>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  ))}\n                </Row>\n                : (\n                  <main style={{ padding: \"1rem 0\" }}>\n                    <h2>No sold assets</h2>\n                  </main>\n                )}\n            </>\n          </div>\n          : (\n            <main style={{ padding: \"1rem 0\" }}>\n              <h2>No listed assets</h2>\n            </main>\n          )}\n      </div>\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}