{"ast":null,"code":"var _jsxFileName = \"E:\\\\6883proj\\\\6883project\\\\src\\\\frontend\\\\components\\\\MyResales.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport { ethers } from \"ethers\";\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MyResales(_ref) {\n  _s();\n\n  let {\n    contract,\n    account\n  } = _ref;\n  const audioRefs = useRef([]);\n  const [loading, setLoading] = useState(true);\n  const [listedItems, setListedItems] = useState(null);\n  const [soldItems, setSoldItems] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(null);\n  const [selected, setSelected] = useState(0);\n  const [previous, setPrevious] = useState(null);\n\n  const loadMyResales = async () => {\n    // Fetch resale items from marketplace by quering MarketItemRelisted events with the seller set as the user\n    let filter = contract.filters.MarketItemRelisted(null, account, null);\n    let results = await contract.queryFilter(filter); // Fetch metadata of each nft and add that to item object.\n\n    const listedItems = await Promise.all(results.map(async i => {\n      // fetch arguments from each result\n      i = i.args; // get uri url from nft contract\n\n      const uri = await contract.tokenURI(i.tokenId); // use uri to fetch the nft metadata stored on ipfs \n\n      const response = await fetch(uri + \".json\");\n      const metadata = await response.json(); // define listed item object\n\n      let purchasedItem = {\n        price: i.price,\n        itemId: i.tokenId,\n        name: metadata.name,\n        audio: metadata.audio,\n        cover: metadata.cover\n      };\n      return purchasedItem;\n    }));\n    setListedItems(listedItems); // Fetch sold resale items by quering MarketItemBought events with the seller set as the user.\n\n    filter = contract.filters.MarketItemBought(null, account, null, null);\n    results = await contract.queryFilter(filter); // Filter out the sold items from the listedItems\n\n    const soldItems = listedItems.filter(i => results.some(j => i.itemId.toString() === j.args.tokenId.toString()));\n    setSoldItems(soldItems);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (isPlaying) {\n      audioRefs.current[selected].play();\n      if (selected !== previous) audioRefs.current[previous].pause();\n    } else if (isPlaying !== null) {\n      audioRefs.current[selected].pause();\n    }\n  });\n  useEffect(() => {\n    !listedItems && loadMyResales();\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      padding: \"1rem 0\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: listedItems.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-5 py-3 container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Listed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            xs: 1,\n            md: 2,\n            lg: 4,\n            className: \"g-4 py-3\",\n            children: listedItems.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n              className: \"overflow-hidden\",\n              children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n                src: item.audio,\n                ref: el => audioRefs.current[idx] = el\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  variant: \"top\",\n                  src: item.cover\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  color: \"secondary\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-grid px-4\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"secondary\",\n                      onClick: () => {\n                        setPrevious(selected);\n                        setSelected(idx);\n                        if (!isPlaying || idx === selected) setIsPlaying(!isPlaying);\n                      },\n                      children: isPlaying && selected === idx ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        width: \"23\",\n                        height: \"23\",\n                        fill: \"currentColor\",\n                        className: \"bi bi-pause\",\n                        viewBox: \"0 0 16 16\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          d: \"M6 3.5a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5zm4 0a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5z\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 86,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 85,\n                        columnNumber: 31\n                      }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        width: \"23\",\n                        height: \"23\",\n                        fill: \"currentColor\",\n                        className: \"bi bi-play\",\n                        viewBox: \"0 0 16 16\",\n                        children: /*#__PURE__*/_jsxDEV(\"path\", {\n                          d: \"M10.804 8 5 4.633v6.734L10.804 8zm.792-.696a.802.802 0 0 1 0 1.392l-6.363 3.692C4.713 12.69 4 12.345 4 11.692V4.308c0-.653.713-.998 1.233-.696l6.363 3.692z\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 90,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 89,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"mt-1\",\n                    children: [ethers.utils.formatEther(item.price), \" ETH\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Sold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), soldItems.length > 0 ? /*#__PURE__*/_jsxDEV(Row, {\n              xs: 1,\n              md: 2,\n              lg: 4,\n              className: \"g-4 py-3\",\n              children: soldItems.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n                className: \"overflow-hidden\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                    variant: \"top\",\n                    src: item.identicon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                    color: \"secondary\",\n                    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      className: \"mt-1\",\n                      children: [ethers.utils.formatEther(item.price), \" ETH\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 25\n                }, this)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n              style: {\n                padding: \"1rem 0\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"No sold assets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n        style: {\n          padding: \"1rem 0\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No listed assets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyResales, \"eLiiTCzBDqpzUs90lRpM4gN3J08=\");\n\n_c = MyResales;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyResales\");","map":{"version":3,"sources":["E:/6883proj/6883project/src/frontend/components/MyResales.js"],"names":["useState","useEffect","useRef","ethers","Row","Col","Card","Button","MyResales","contract","account","audioRefs","loading","setLoading","listedItems","setListedItems","soldItems","setSoldItems","isPlaying","setIsPlaying","selected","setSelected","previous","setPrevious","loadMyResales","filter","filters","MarketItemRelisted","results","queryFilter","Promise","all","map","i","args","uri","tokenURI","tokenId","response","fetch","metadata","json","purchasedItem","price","itemId","name","audio","cover","MarketItemBought","some","j","toString","current","play","pause","padding","length","item","idx","el","utils","formatEther","identicon"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react'\r\nimport { ethers } from \"ethers\"\r\nimport { Row, Col, Card, Button } from 'react-bootstrap'\r\n\r\nexport default function MyResales({ contract, account }) {\r\n  const audioRefs = useRef([]);\r\n  const [loading, setLoading] = useState(true)\r\n  const [listedItems, setListedItems] = useState(null)\r\n  const [soldItems, setSoldItems] = useState([])\r\n  const [isPlaying, setIsPlaying] = useState(null)\r\n  const [selected, setSelected] = useState(0)\r\n  const [previous, setPrevious] = useState(null)\r\n  const loadMyResales = async () => {\r\n    // Fetch resale items from marketplace by quering MarketItemRelisted events with the seller set as the user\r\n    let filter = contract.filters.MarketItemRelisted(null, account, null)\r\n    let results = await contract.queryFilter(filter)\r\n    // Fetch metadata of each nft and add that to item object.\r\n    const listedItems = await Promise.all(results.map(async i => {\r\n      // fetch arguments from each result\r\n      i = i.args\r\n      // get uri url from nft contract\r\n      const uri = await contract.tokenURI(i.tokenId)\r\n      // use uri to fetch the nft metadata stored on ipfs \r\n      const response = await fetch(uri + \".json\")\r\n      const metadata = await response.json()\r\n      // define listed item object\r\n      let purchasedItem = {\r\n        price: i.price,\r\n        itemId: i.tokenId,\r\n        name: metadata.name,\r\n        audio: metadata.audio,\r\n        cover: metadata.cover\r\n      }\r\n      return purchasedItem    \r\n    }))\r\n    setListedItems(listedItems)\r\n    // Fetch sold resale items by quering MarketItemBought events with the seller set as the user.\r\n    filter = contract.filters.MarketItemBought(null, account, null, null)\r\n    results = await contract.queryFilter(filter)\r\n    // Filter out the sold items from the listedItems\r\n    const soldItems = listedItems.filter(i => results.some(j => i.itemId.toString() === j.args.tokenId.toString()))\r\n    setSoldItems(soldItems)\r\n    setLoading(false)\r\n  }\r\n  useEffect(() => {\r\n    if (isPlaying) {\r\n      audioRefs.current[selected].play()\r\n      if (selected !== previous) audioRefs.current[previous].pause()\r\n    } else if (isPlaying !== null) {\r\n      audioRefs.current[selected].pause()\r\n    }\r\n\r\n  })\r\n  useEffect(() => {\r\n    !listedItems && loadMyResales()\r\n  })\r\n\r\n  if (loading) return (\r\n    <main style={{ padding: \"1rem 0\" }}>\r\n      <h2>Loading...</h2>\r\n    </main>\r\n  )\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      <div className=\"flex justify-center\">\r\n        {listedItems.length > 0 ?\r\n          <div className=\"px-5 py-3 container\">\r\n            <div class=\"column\">\r\n              <h2>Listed</h2>\r\n              <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\r\n                {listedItems.map((item, idx) => (\r\n                  <Col key={idx} className=\"overflow-hidden\">\r\n                    <audio src={item.audio} ref={el => audioRefs.current[idx] = el}></audio>\r\n                    <Card>\r\n                      <Card.Img variant=\"top\" src={item.cover}/>\r\n                      <Card.Body color=\"secondary\">\r\n                        <Card.Title>{item.name}</Card.Title>\r\n                        <div className=\"d-grid px-4\">\r\n                          <Button variant=\"secondary\" onClick={() => {\r\n                            setPrevious(selected)\r\n                            setSelected(idx)\r\n                            if (!isPlaying || idx === selected) setIsPlaying(!isPlaying)\r\n                          }}>\r\n                            {isPlaying && selected === idx ? (\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"23\" height=\"23\" fill=\"currentColor\" className=\"bi bi-pause\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M6 3.5a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5zm4 0a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5z\" />\r\n                              </svg>\r\n                            ) : (\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"23\" height=\"23\" fill=\"currentColor\" className=\"bi bi-play\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M10.804 8 5 4.633v6.734L10.804 8zm.792-.696a.802.802 0 0 1 0 1.392l-6.363 3.692C4.713 12.69 4 12.345 4 11.692V4.308c0-.653.713-.998 1.233-.696l6.363 3.692z\" />\r\n                              </svg>\r\n                            )}\r\n                          </Button>\r\n                        </div>\r\n                        <Card.Text className=\"mt-1\">\r\n                          {ethers.utils.formatEther(item.price)} ETH\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </div>\r\n            <>\r\n              <div class=\"column\">\r\n                <h2>Sold</h2>\r\n                {soldItems.length > 0 ?\r\n                  <Row xs={1} md={2} lg={4} className=\"g-4 py-3\">\r\n                    {soldItems.map((item, idx) => (\r\n                      <Col key={idx} className=\"overflow-hidden\">\r\n                        <Card>\r\n                          <Card.Img variant=\"top\" src={item.identicon} />\r\n                          <Card.Body color=\"secondary\">\r\n                            <Card.Title>{item.name}</Card.Title>\r\n                            <Card.Text className=\"mt-1\">\r\n                              {ethers.utils.formatEther(item.price)} ETH\r\n                            </Card.Text>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                  : (\r\n                    <main style={{ padding: \"1rem 0\" }}>\r\n                      <h2>No sold assets</h2>\r\n                    </main>\r\n                  )}\r\n              </div>\r\n            </>\r\n          </div>\r\n          : (\r\n            <main style={{ padding: \"1rem 0\" }}>\r\n              <h2>No listed assets</h2>\r\n            </main>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}